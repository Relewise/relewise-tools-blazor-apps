@using KristofferStrube.Blazor.Relewise.TypeEditors
@using MessagePack
<div class="box two-column-grid">
    @foreach (var property in typeof(Product).GetProperties().Where(p => p.SetMethod is not null && p.GetIndexParameters() is { Length: 0 } && p.Name is not "Custom"))
    {
        <div>
            <b>@property.Name</b>
        </div>
        <div>
            @if (@property.Name is "Id")
            {
                <u><b>@property.GetValue(Product)</b></u>
            }
            else if (Settings.Editors.FirstOrDefault(editor => editor.CanHandle(property.PropertyType)) is { } editor)
            {
                <DynamicComponent Type="@editor.EditorType(property.PropertyType)" Parameters="@(new Dictionary<string, object?>() { ["Value"] = property.GetValue(Product), ["Setter"] = (object? obj) => property.SetValue(Product, obj) })" />
            }
            else
            {
                <code>Can't edit @Name(property.PropertyType)</code>
            }
        </div>
    }
</div>


@code {
    [Parameter, EditorRequired]
    public required Product Product { get; set; }

    public static string Name(Type type) => (type.DeclaringType is { } nestedType ? $"{Name(nestedType)}." : "") + type.Name.Replace("`1", "").Replace("`2", "") + (type.GenericTypeArguments is { Length: > 0 } args ? $"<{string.Join(", ", args.Select(t => t.Name))}>" : "");
}