<div class="input-group">
    <div class="input-group-prepend">
        <label for="serverUrl" class="input-group-text" style="width:120px;">Server URL</label>
    </div>
    <input @bind=StaticDatasetStorage.ServerUrl class="form-control" id="serverUrl" @bind:after=serverUrlFilledOut />
</div>
@if (serverUrlError is not null)
{
    <code>@serverUrlError</code>
}
<br />
<div class="input-group">
    <div class="input-group-prepend">
        <label for="datasetId" class="input-group-text" style="width:120px;">Dataset Id</label>
    </div>
    <input @bind=StaticDatasetStorage.DatasetId class="form-control" id="datasetId" @bind:after="datasetIdFilledOut" />
</div>
@if (datasetIdError is not null)
{
    <code>@datasetIdError</code>
}
<br />
<div class="input-group">
    <div class="input-group-prepend">
        <label for="apiKey" class="input-group-text" style="width:120px;">API Key</label>
    </div>
    <input type="password" @bind=StaticDatasetStorage.ApiKey class="form-control" id="apiKey" @bind:after="apiKeyFilledOut" />
</div>
@if (apiKeyError is not null)
{
    <code>@apiKeyError</code>
}
<br />

@code {
    string? serverUrlError;
    string? datasetIdError;
    string? apiKeyError;

    void serverUrlFilledOut()
    {
        serverUrlError = null;
        try
        {
            new Uri(StaticDatasetStorage.ServerUrl);
        }
        catch
        {
            serverUrlError = "Server URL needs to be a valid URL.";
        }
    }

    void datasetIdFilledOut()
    {
        if (Guid.TryParse(StaticDatasetStorage.DatasetId, out _))
        {
            datasetIdError = null;
        }
        else
        {
            datasetIdError = "The Dataset Id needs to be in the GUID format.";
        }
    }

    void apiKeyFilledOut()
    {
        if (string.IsNullOrWhiteSpace(StaticDatasetStorage.ApiKey))
        {
            apiKeyError = "API Key can't be empty or white spaces.";
        }
        else
        {
            apiKeyError = null;
        }
    }
}
